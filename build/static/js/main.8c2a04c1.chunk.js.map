{"version":3,"sources":["Store/Reducer/todoSlice.js","Store/index.js","Components/NavBar.jsx","Components/TodoForm.jsx","Components/TextToSpeech.jsx","App.jsx","index.js"],"names":["hostname","getTodo","createAsyncThunk","a","axios","get","res","data","addTodo","title","newTodo","id","nanoid","completed","post","then","console","log","removeTodo","deleteTodo","delete","todosSlice","createSlice","name","initialState","allTodos","reducers","addTodos","reducer","state","action","unshift","payload","prepare","removeTodos","filter","todo","markComplete","map","extraReducers","pending","fulfilled","todosSelector","actions","store","configureStore","todosReducer","NavBar","todos","useSelector","Navbar","expand","bg","variant","Brand","Nav","Link","href","length","TodoForm","useState","setTitle","dispatch","useDispatch","Form","className","onSubmit","event","preventDefault","Group","controlId","Label","Control","type","onChange","target","value","Text","Button","window","speechSynthesis","Todos","React","lazy","App","Alert","Heading","Container","fallback","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.8c2a04c1.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk, nanoid } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst local = \"http://127.0.0.1:3001\";\r\nconst heroku = \"https://hahunavth-rails-api.herokuapp.com\";\r\nconst hostname = heroku;\r\n\r\nexport const getTodo = createAsyncThunk(\"todos/todosFetched\", async () => {\r\n  // const res = await axios.get(\r\n  //   \"https://jsonplaceholder.typicode.com/todos?_limit=5\"\r\n  // );\r\n  const res = await axios.get(hostname + \"/todos\");\r\n  return res.data;\r\n});\r\n\r\nexport const addTodo = createAsyncThunk(\"todos/todosAdded\", async (title) => {\r\n  const newTodo = {\r\n    id: nanoid(),\r\n    title: title,\r\n    completed: false,\r\n  };\r\n  // await axios.get(\"https://jsonplaceholder.typicode.com/todos\", newTodo);\r\n  await axios.post(hostname + \"/todos\", newTodo).then((res) => {\r\n    console.log(\"add todo return : \");\r\n    console.log(res);\r\n    newTodo.id = res.data.id;\r\n  });\r\n  return newTodo;\r\n});\r\n\r\nexport const removeTodo = createAsyncThunk(\"todos/todosRemove\", async (id) => {\r\n  const deleteTodo = {\r\n    id: id,\r\n  };\r\n  // await axios.get(\"https://jsonplaceholder.typicode.com/todos\", newTodo);\r\n  await axios.delete(hostname + \"/todos/\" + id, deleteTodo);\r\n\r\n  return { id };\r\n});\r\n\r\nconst todosSlice = createSlice({\r\n  name: \"todos\",\r\n  initialState: {\r\n    allTodos: [],\r\n  },\r\n  reducers: {\r\n    addTodos: {\r\n      reducer: (state, action) => {\r\n        state.allTodos.unshift(action.payload);\r\n      },\r\n      prepare: (title) => {\r\n        return {\r\n          payload: { id: nanoid(), title: title, completed: false },\r\n        };\r\n      },\r\n    },\r\n    removeTodos: (state, action) => {\r\n      const id = action.payload;\r\n      state.allTodos = state.allTodos.filter((todo) => {\r\n        return todo.id !== id;\r\n      });\r\n    },\r\n    markComplete: (state, action) => {\r\n      const id = action.payload;\r\n      state.allTodos = state.allTodos.map((todo) => {\r\n        if (todo.id === id) {\r\n          todo.completed = !todo.completed;\r\n        }\r\n        return todo;\r\n      });\r\n    },\r\n  },\r\n  extraReducers: {\r\n    // Get all todos\r\n    [getTodo.pending]: (state, action) => {\r\n      console.log(\"Fetching todos from backend ....\");\r\n    },\r\n    [getTodo.fulfilled]: (state, action) => {\r\n      console.log(\"Done\");\r\n      state.allTodos = action.payload;\r\n    },\r\n    [addTodo.pending]: (state, action) => {\r\n      console.log(\"try add todo\");\r\n    },\r\n    [addTodo.fulfilled]: (state, action) => {\r\n      const title = action.payload;\r\n      const id = action.payload.id;\r\n      state.allTodos.unshift(title);\r\n    },\r\n    [removeTodo.pending]: (state, action) => {\r\n      console.log(\"try delete todo\");\r\n    },\r\n    [removeTodo.fulfilled]: (state, action) => {\r\n      const id = action.payload.id;\r\n      state.allTodos = state.allTodos.filter((todo) => {\r\n        return todo.id !== id;\r\n      });\r\n    },\r\n  },\r\n});\r\n\r\n//Export selector\r\nexport const todosSelector = (state) => state.allTodos;\r\n//Export action\r\nexport const { addTodos, removeTodos, markComplete } = todosSlice.actions;\r\n//Export reducer\r\nexport default todosSlice.reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport todosReducer from \"./Reducer/todoSlice\";\r\n\r\nconst store = configureStore({ reducer: todosReducer });\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport {useSelector} from 'react-redux';\r\nimport {todosSelector} from '../Store/Reducer/todoSlice'\r\nimport {Navbar, Containe, Nav} from 'react-bootstrap'\r\n\r\nconst NavBar = () => {\r\n  const todos = useSelector(todosSelector)\r\n\r\n  return (\r\n    <Navbar expand='lg' bg=\"primary\" variant=\"dark\">\r\n      <Navbar.Brand>MyReduxTodos</Navbar.Brand>\r\n      <Nav>\r\n      <Nav.Link href='#'>Home</Nav.Link>\r\n        <Nav.Link href='#'>About</Nav.Link>\r\n        <Nav.Link href='#'>Total todos: {todos.length}</Nav.Link>\r\n      </Nav>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addTodo } from \"../Store/Reducer/todoSlice\";\r\nimport {Form, Button} from 'react-bootstrap'\r\n\r\nfunction TodoForm() {\r\n  const [title, setTitle] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  function handleChange(event) {\r\n    event.preventDefault();\r\n    setTitle(event.target.value);\r\n  }\r\n\r\n  function handleAddTodo(event) {\r\n    event.preventDefault();\r\n\r\n    dispatch(addTodo(title));\r\n    setTitle(\"\");\r\n  }\r\n\r\n  return (\r\n    <Form className=\"TodoForm\" onSubmit={handleAddTodo}>\r\n      <Form.Group controlId=\"formTodo\">\r\n      <Form.Label>Add Todo: </Form.Label>\r\n      <Form.Control type=\"text\" onChange={handleChange} value={title} />\r\n      <Form.Text className=\"text-muted\">\r\n        { /* We'll never share your email with anyone else. */}\r\n      </Form.Text>\r\n      </Form.Group>\r\n      <Button variant=\"primary mt-2 mb-2\"  type=\"submit\"> Submit </Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default TodoForm;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nvar synth = window.speechSynthesis;\r\n\r\nconst TextToSpeech = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const [pitch, setPitch] = useState(1);\r\n  const [rate, setRate] = useState(1);\r\n  const [voiceSelect, setVoiceSelect] = useState(0);\r\n  const [voiceList, setVoiceList] = useState([]);\r\n  const [btnText, setBtnText] = useState(\"Play\");\r\n\r\n  const handleChange = (e) => {\r\n    const type = e.target.type;\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    if (type === \"textarea\") {\r\n      setText(value);\r\n    } else if (name === \"rate\") {\r\n      setRate(value);\r\n    } else if (name === \"pitch\") {\r\n      setPitch(value);\r\n    } else if (name === \"voice\") {\r\n      setVoiceSelect(value);\r\n    } else {\r\n      console.log(\"handleChange error type = \" + type);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = function (event) {\r\n    event.preventDefault();\r\n    speak();\r\n    // inputTxt.blur();\r\n  };\r\n\r\n  function getVoices() {\r\n    var voices = synth.getVoices().sort(function (a, b) {\r\n      const aname = a.name.toUpperCase(),\r\n        bname = b.name.toUpperCase();\r\n      if (aname < bname) return -1;\r\n      else if (aname === bname) return 0;\r\n      else return +1;\r\n    });\r\n    return voices;\r\n  }\r\n\r\n  function speak() {\r\n    if (synth.speaking) {\r\n      if (synth.paused) {\r\n        synth.resume();\r\n        setBtnText(\"Pause\");\r\n        console.log(\"resume\");\r\n      } else {\r\n        synth.pause();\r\n        setBtnText(\"Resume\");\r\n        console.log(\"pause\");\r\n      }\r\n    } else if (text !== \"\") {\r\n      var utterThis = new SpeechSynthesisUtterance(text);\r\n      console.log(utterThis);\r\n\r\n      //onboundary\r\n      //e.charIndex -> vi tri dau tien cua tu dang duoc doc\r\n\r\n      utterThis.onend = function (event) {\r\n        setBtnText(\"Play\");\r\n        console.log(\"SpeechSynthesisUtterance.onend\");\r\n      };\r\n      utterThis.onstart = function (event) {\r\n        setBtnText(\"Pause\");\r\n        console.log(\"SpeechSynthesisUtterance.onend\");\r\n      };\r\n      utterThis.onerror = function (event) {\r\n        console.error(\"SpeechSynthesisUtterance.onerror\");\r\n      };\r\n\r\n      if (voiceSelect >= 0) utterThis.voice = voiceList[voiceSelect];\r\n\r\n      utterThis.pitch = pitch;\r\n      utterThis.rate = rate;\r\n      synth.speak(utterThis);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    let voices = getVoices();\r\n    setVoiceList([...voices]);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (speechSynthesis.onvoiceschanged !== undefined) {\r\n      speechSynthesis.onvoiceschanged = voiceSelect;\r\n    }\r\n  }, [voiceSelect]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Speech synthesiser</h1>\r\n\r\n      <p>\r\n        Enter some text in the input below and press return or the \"play\" button\r\n        to hear it. change voices using the dropdown menu.\r\n      </p>\r\n\r\n      <form className=\"inputForm\" onSubmit={handleSubmit}>\r\n        <textarea\r\n          type=\"text\"\r\n          className=\"txt\"\r\n          value={text}\r\n          onChange={handleChange}\r\n        ></textarea>\r\n        <div>\r\n          <label htmlFor=\"rate\">Rate</label>\r\n          <input\r\n            name=\"rate\"\r\n            type=\"range\"\r\n            min=\"0.5\"\r\n            max=\"2\"\r\n            value={rate}\r\n            step=\"0.1\"\r\n            id=\"rate\"\r\n            onChange={handleChange}\r\n          />\r\n          <div className=\"rate-value\">{rate}</div>\r\n          <div className=\"clearfix\"></div>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"pitch\">Pitch</label>\r\n          <input\r\n            name=\"pitch\"\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"2\"\r\n            value={pitch}\r\n            step=\"0.1\"\r\n            id=\"pitch\"\r\n            onChange={handleChange}\r\n          />\r\n          <div className=\"pitch-value\">{pitch}</div>\r\n          <div className=\"clearfix\"></div>\r\n        </div>\r\n        <select name=\"voice\" onChange={handleChange}>\r\n          {voiceList.map((voice, index) => {\r\n            return (\r\n              <option key={index} value={index}>\r\n                {voice.name}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n        <div className=\"controls\">\r\n          <button id=\"play\" type=\"submit\">\r\n            {btnText}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextToSpeech;\r\n","// import \"./styles.scss\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { Suspense } from \"react\";\nimport NavBar from \"./Components/NavBar\";\nimport TodoForm from \"./Components/TodoForm\";\nimport MyForm from \"./Components/MyForm\";\nimport TextToSpeech from \"./Components/TextToSpeech\";\nimport {Alert, Container} from 'react-bootstrap';\n\nconst Todos = React.lazy(() => import('./Components/Todos'))\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Alert variant=\"success\"> \n        <Alert.Heading>Notification</Alert.Heading>\n        hello\n        <hr/>\n      </Alert>\n      {/* <MyForm /> */}\n      <Container>\n        <TodoForm />\n        <Suspense fallback={<h1>loading</h1>} >\n          <Todos/>\n        </Suspense>\n      </Container>\n      {/* <TextToSpeech /> */}\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Store/index\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}