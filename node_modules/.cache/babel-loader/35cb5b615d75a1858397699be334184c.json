{"ast":null,"code":"import _regeneratorRuntime from \"/home/kryo/Desktop/ReduxToolkit_TodoApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/kryo/Desktop/ReduxToolkit_TodoApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { createSlice, createAsyncThunk, nanoid } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport var getTodo = createAsyncThunk(\"todos/todosFetched\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return axios.get(\"http://localhost:3001/todos\");\n\n        case 2:\n          res = _context.sent;\n          return _context.abrupt(\"return\", res.data);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n})));\nexport var addTodo = createAsyncThunk(\"todos/todosAdded\", /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(title) {\n    var newTodo;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            newTodo = {\n              id: nanoid(),\n              title: title,\n              completed: false\n            };\n            _context2.next = 3;\n            return axios.get(\"http://localhost:3001/todos\", newTodo);\n\n          case 3:\n            return _context2.abrupt(\"return\", newTodo);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nvar todosSlice = createSlice({\n  name: \"todos\",\n  initialState: {\n    allTodos: []\n  },\n  reducers: {\n    addTodos: {\n      reducer: function reducer(state, action) {\n        state.allTodos.unshift(action.payload);\n      },\n      prepare: function prepare(title) {\n        return {\n          payload: {\n            id: nanoid(),\n            title: title,\n            completed: false\n          }\n        };\n      }\n    },\n    removeTodos: function removeTodos(state, action) {\n      var id = action.payload;\n      state.allTodos = state.allTodos.filter(function (todo) {\n        return todo.id !== id;\n      });\n    },\n    markComplete: function markComplete(state, action) {\n      var id = action.payload;\n      state.allTodos = state.allTodos.map(function (todo) {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n\n        return todo;\n      });\n    }\n  },\n  extraReducers: {\n    // Get all todos\n    [getTodo.pending]: function (state, action) {\n      console.log(\"Fetching todos from backend ....\");\n    },\n    [getTodo.fulfilled]: function (state, action) {\n      console.log(\"Done\");\n      state.allTodos = action.payload;\n    },\n    [addTodo.pending]: function (state, action) {\n      console.log(\"try add todo\");\n    },\n    [addTodo.fulfilled]: function (state, action) {\n      var title = action.payload;\n      console.log(\"added\" + title);\n      state.allTodos.unshift(title);\n    }\n  }\n}); //Export selector\n\nexport var todosSelector = function todosSelector(state) {\n  return state.allTodos;\n}; //Export action\n\nvar _todosSlice$actions = todosSlice.actions,\n    addTodos = _todosSlice$actions.addTodos,\n    removeTodos = _todosSlice$actions.removeTodos,\n    markComplete = _todosSlice$actions.markComplete; //Export reducer\n\nexport { addTodos, removeTodos, markComplete };\nexport default todosSlice.reducer;","map":{"version":3,"sources":["/home/kryo/Desktop/ReduxToolkit_TodoApp/src/Store/Reducer/todoSlice.js"],"names":["createSlice","createAsyncThunk","nanoid","axios","getTodo","get","res","data","addTodo","title","newTodo","id","completed","todosSlice","name","initialState","allTodos","reducers","addTodos","reducer","state","action","unshift","payload","prepare","removeTodos","filter","todo","markComplete","map","extraReducers","pending","console","log","fulfilled","todosSelector","actions"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,gBAAtB,EAAwCC,MAAxC,QAAsD,kBAAtD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,OAAO,GAAGH,gBAAgB,CAAC,oBAAD,wEAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAI1CE,KAAK,CAACE,GAAN,CAAU,6BAAV,CAJ0C;;AAAA;AAItDC,UAAAA,GAJsD;AAAA,2CAKrDA,GAAG,CAACC,IALiD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB,GAAhC;AAQP,OAAO,IAAMC,OAAO,GAAGP,gBAAgB,CAAC,kBAAD;AAAA,uEAAqB,kBAAOQ,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACpDC,YAAAA,OADoD,GAC1C;AACdC,cAAAA,EAAE,EAAET,MAAM,EADI;AAEdO,cAAAA,KAAK,EAAEA,KAFO;AAGdG,cAAAA,SAAS,EAAE;AAHG,aAD0C;AAAA;AAAA,mBAMpDT,KAAK,CAACE,GAAN,CAAU,6BAAV,EAAyCK,OAAzC,CANoD;;AAAA;AAAA,8CAOnDA,OAPmD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAAA;AAAA;AAAA;AAAA,IAAhC;AAUP,IAAMG,UAAU,GAAGb,WAAW,CAAC;AAC7Bc,EAAAA,IAAI,EAAE,OADuB;AAE7BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,QAAQ,EAAE;AADE,GAFe;AAK7BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,OAAO,EAAE,iBAACC,KAAD,EAAQC,MAAR,EAAmB;AAC1BD,QAAAA,KAAK,CAACJ,QAAN,CAAeM,OAAf,CAAuBD,MAAM,CAACE,OAA9B;AACD,OAHO;AAIRC,MAAAA,OAAO,EAAE,iBAACf,KAAD,EAAW;AAClB,eAAO;AACLc,UAAAA,OAAO,EAAE;AAAEZ,YAAAA,EAAE,EAAET,MAAM,EAAZ;AAAgBO,YAAAA,KAAK,EAAEA,KAAvB;AAA8BG,YAAAA,SAAS,EAAE;AAAzC;AADJ,SAAP;AAGD;AARO,KADF;AAWRa,IAAAA,WAAW,EAAE,qBAACL,KAAD,EAAQC,MAAR,EAAmB;AAC9B,UAAMV,EAAE,GAAGU,MAAM,CAACE,OAAlB;AACAH,MAAAA,KAAK,CAACJ,QAAN,GAAiBI,KAAK,CAACJ,QAAN,CAAeU,MAAf,CAAsB,UAACC,IAAD,EAAU;AAC/C,eAAOA,IAAI,CAAChB,EAAL,KAAYA,EAAnB;AACD,OAFgB,CAAjB;AAGD,KAhBO;AAiBRiB,IAAAA,YAAY,EAAE,sBAACR,KAAD,EAAQC,MAAR,EAAmB;AAC/B,UAAMV,EAAE,GAAGU,MAAM,CAACE,OAAlB;AACAH,MAAAA,KAAK,CAACJ,QAAN,GAAiBI,KAAK,CAACJ,QAAN,CAAea,GAAf,CAAmB,UAACF,IAAD,EAAU;AAC5C,YAAIA,IAAI,CAAChB,EAAL,KAAYA,EAAhB,EAAoB;AAClBgB,UAAAA,IAAI,CAACf,SAAL,GAAiB,CAACe,IAAI,CAACf,SAAvB;AACD;;AACD,eAAOe,IAAP;AACD,OALgB,CAAjB;AAMD;AAzBO,GALmB;AAgC7BG,EAAAA,aAAa,EAAE;AACb;AACA,KAAC1B,OAAO,CAAC2B,OAAT,GAAmB,UAACX,KAAD,EAAQC,MAAR,EAAmB;AACpCW,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACD,KAJY;AAKb,KAAC7B,OAAO,CAAC8B,SAAT,GAAqB,UAACd,KAAD,EAAQC,MAAR,EAAmB;AACtCW,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAb,MAAAA,KAAK,CAACJ,QAAN,GAAiBK,MAAM,CAACE,OAAxB;AACD,KARY;AASb,KAACf,OAAO,CAACuB,OAAT,GAAmB,UAACX,KAAD,EAAQC,MAAR,EAAmB;AACpCW,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD,KAXY;AAYb,KAACzB,OAAO,CAAC0B,SAAT,GAAqB,UAACd,KAAD,EAAQC,MAAR,EAAmB;AACtC,UAAMZ,KAAK,GAAGY,MAAM,CAACE,OAArB;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAUxB,KAAtB;AACAW,MAAAA,KAAK,CAACJ,QAAN,CAAeM,OAAf,CAAuBb,KAAvB;AACD;AAhBY;AAhCc,CAAD,CAA9B,C,CAoDA;;AACA,OAAO,IAAM0B,aAAa,GAAG,SAAhBA,aAAgB,CAACf,KAAD;AAAA,SAAWA,KAAK,CAACJ,QAAjB;AAAA,CAAtB,C,CACP;;0BACuDH,UAAU,CAACuB,O;IAAnDlB,Q,uBAAAA,Q;IAAUO,W,uBAAAA,W;IAAaG,Y,uBAAAA,Y,EACtC;;;AACA,eAAef,UAAU,CAACM,OAA1B","sourcesContent":["import { createSlice, createAsyncThunk, nanoid } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nexport const getTodo = createAsyncThunk(\"todos/todosFetched\", async () => {\r\n  // const res = await axios.get(\r\n  //   \"https://jsonplaceholder.typicode.com/todos?_limit=5\"\r\n  // );\r\n  const res = await axios.get(\"http://localhost:3001/todos\");\r\n  return res.data;\r\n});\r\n\r\nexport const addTodo = createAsyncThunk(\"todos/todosAdded\", async (title) => {\r\n  const newTodo = {\r\n    id: nanoid(),\r\n    title: title,\r\n    completed: false,\r\n  };\r\n  await axios.get(\"http://localhost:3001/todos\", newTodo);\r\n  return newTodo;\r\n});\r\n\r\nconst todosSlice = createSlice({\r\n  name: \"todos\",\r\n  initialState: {\r\n    allTodos: [],\r\n  },\r\n  reducers: {\r\n    addTodos: {\r\n      reducer: (state, action) => {\r\n        state.allTodos.unshift(action.payload);\r\n      },\r\n      prepare: (title) => {\r\n        return {\r\n          payload: { id: nanoid(), title: title, completed: false },\r\n        };\r\n      },\r\n    },\r\n    removeTodos: (state, action) => {\r\n      const id = action.payload;\r\n      state.allTodos = state.allTodos.filter((todo) => {\r\n        return todo.id !== id;\r\n      });\r\n    },\r\n    markComplete: (state, action) => {\r\n      const id = action.payload;\r\n      state.allTodos = state.allTodos.map((todo) => {\r\n        if (todo.id === id) {\r\n          todo.completed = !todo.completed;\r\n        }\r\n        return todo;\r\n      });\r\n    },\r\n  },\r\n  extraReducers: {\r\n    // Get all todos\r\n    [getTodo.pending]: (state, action) => {\r\n      console.log(\"Fetching todos from backend ....\");\r\n    },\r\n    [getTodo.fulfilled]: (state, action) => {\r\n      console.log(\"Done\");\r\n      state.allTodos = action.payload;\r\n    },\r\n    [addTodo.pending]: (state, action) => {\r\n      console.log(\"try add todo\");\r\n    },\r\n    [addTodo.fulfilled]: (state, action) => {\r\n      const title = action.payload;\r\n      console.log(\"added\" + title);\r\n      state.allTodos.unshift(title);\r\n    },\r\n  },\r\n});\r\n\r\n//Export selector\r\nexport const todosSelector = (state) => state.allTodos;\r\n//Export action\r\nexport const { addTodos, removeTodos, markComplete } = todosSlice.actions;\r\n//Export reducer\r\nexport default todosSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}