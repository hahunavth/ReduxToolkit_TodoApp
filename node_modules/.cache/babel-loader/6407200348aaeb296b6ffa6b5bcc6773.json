{"ast":null,"code":"import _slicedToArray from \"/home/kryo/Desktop/ReduxToolkit_TodoApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/kryo/Desktop/ReduxToolkit_TodoApp/src/Components/TodoForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addTodo } from \"../Store/Reducer/todoSlice\";\nimport { Form, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoForm() {\n  _s();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var dispatch = useDispatch();\n\n  function handleChange(event) {\n    event.preventDefault();\n    setTitle(event.target.value);\n  }\n\n  function handleAddTodo(event) {\n    event.preventDefault();\n    dispatch(addTodo(title));\n    setTitle(\"\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"TodoForm\",\n    onSubmit: handleAddTodo,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Add Todo: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: handleChange,\n      value: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoForm, \"Yi93PLcmY4eth1zynS9qZqJgiWo=\", false, function () {\n  return [useDispatch];\n});\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["/home/kryo/Desktop/ReduxToolkit_TodoApp/src/Components/TodoForm.jsx"],"names":["React","useState","useDispatch","addTodo","Form","Button","TodoForm","title","setTitle","dispatch","handleChange","event","preventDefault","target","value","handleAddTodo"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,SAAQC,IAAR,EAAcC,MAAd,QAA2B,iBAA3B;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAAA,kBACQL,QAAQ,CAAC,EAAD,CADhB;AAAA;AAAA,MACXM,KADW;AAAA,MACJC,QADI;;AAElB,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;;AAEA,WAASQ,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AACAJ,IAAAA,QAAQ,CAACG,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAR;AACD;;AAED,WAASC,aAAT,CAAuBJ,KAAvB,EAA8B;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AAEAH,IAAAA,QAAQ,CAACN,OAAO,CAACI,KAAD,CAAR,CAAR;AACAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD;;AAED,sBACE;AAAM,IAAA,SAAS,EAAC,UAAhB;AAA2B,IAAA,QAAQ,EAAEO,aAArC;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEL,YAA7B;AAA2C,MAAA,KAAK,EAAEH;AAAlD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAO,MAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAvBQD,Q;UAEUJ,W;;;KAFVI,Q;AAyBT,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addTodo } from \"../Store/Reducer/todoSlice\";\r\nimport {Form, Button} from 'react-bootstrap'\r\n\r\nfunction TodoForm() {\r\n  const [title, setTitle] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  function handleChange(event) {\r\n    event.preventDefault();\r\n    setTitle(event.target.value);\r\n  }\r\n\r\n  function handleAddTodo(event) {\r\n    event.preventDefault();\r\n\r\n    dispatch(addTodo(title));\r\n    setTitle(\"\");\r\n  }\r\n\r\n  return (\r\n    <form className=\"TodoForm\" onSubmit={handleAddTodo}>\r\n      <label>Add Todo: </label>\r\n      <input type=\"text\" onChange={handleChange} value={title} />\r\n      <input type=\"submit\" />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TodoForm;\r\n"]},"metadata":{},"sourceType":"module"}