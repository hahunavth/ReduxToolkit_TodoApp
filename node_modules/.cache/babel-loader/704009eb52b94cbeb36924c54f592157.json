{"ast":null,"code":"import _toConsumableArray from \"/home/kryo/Desktop/ReduxToolkit_TodoApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/kryo/Desktop/ReduxToolkit_TodoApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/kryo/Desktop/ReduxToolkit_TodoApp/src/Components/TextToSpeech.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar synth = window.speechSynthesis;\n\nvar TextToSpeech = function TextToSpeech() {\n  _s();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pitch = _useState4[0],\n      setPitch = _useState4[1];\n\n  var _useState5 = useState(1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      rate = _useState6[0],\n      setRate = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      voiceSelect = _useState8[0],\n      setVoiceSelect = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      voiceList = _useState10[0],\n      setVoiceList = _useState10[1];\n\n  var _useState11 = useState(\"Play\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      btnText = _useState12[0],\n      setBtnText = _useState12[1];\n\n  var handleChange = function handleChange(e) {\n    var type = e.target.type;\n    var name = e.target.name;\n    var value = e.target.value;\n\n    if (type === \"textarea\") {\n      setText(value);\n    } else if (name === \"rate\") {\n      setRate(value);\n    } else if (name === \"pitch\") {\n      setPitch(value);\n    } else if (name === \"voice\") {\n      setVoiceSelect(value);\n    } else {\n      console.log(\"handleChange error type = \" + type);\n    }\n  };\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n    speak(); // inputTxt.blur();\n  };\n\n  function getVoices() {\n    var voices = synth.getVoices().sort(function (a, b) {\n      var aname = a.name.toUpperCase(),\n          bname = b.name.toUpperCase();\n      if (aname < bname) return -1;else if (aname === bname) return 0;else return +1;\n    });\n    return voices;\n  }\n\n  function speak() {\n    if (synth.speaking) {\n      if (synth.paused) {\n        synth.resume();\n        setBtnText(\"Pause\");\n        console.log(\"resume\");\n      } else {\n        synth.pause();\n        setBtnText(\"Resume\");\n        console.log(\"pause\");\n      }\n    } else if (text !== \"\") {\n      var utterThis = new SpeechSynthesisUtterance(text);\n      console.log(utterThis); //onboundary\n      //e.charIndex -> vi tri dau tien cua tu dang duoc doc\n\n      utterThis.onend = function (event) {\n        setBtnText(\"Play\");\n        console.log(\"SpeechSynthesisUtterance.onend\");\n      };\n\n      utterThis.onstart = function (event) {\n        setBtnText(\"Pause\");\n        console.log(\"SpeechSynthesisUtterance.onend\");\n      };\n\n      utterThis.onerror = function (event) {\n        console.error(\"SpeechSynthesisUtterance.onerror\");\n      };\n\n      if (voiceSelect >= 0) utterThis.voice = voiceList[voiceSelect];\n      utterThis.pitch = pitch;\n      utterThis.rate = rate;\n      synth.speak(utterThis);\n    }\n  }\n\n  useEffect(function () {\n    var voices = getVoices();\n    setVoiceList(_toConsumableArray(voices));\n  }, []);\n  useEffect(function () {\n    if (speechSynthesis.onvoiceschanged !== undefined) {\n      speechSynthesis.onvoiceschanged = voiceSelect;\n    }\n  }, [voiceSelect]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Speech synthesiser\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Enter some text in the input below and press return or the \\\"play\\\" button to hear it. change voices using the dropdown menu.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"inputForm\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        className: \"txt\",\n        value: text,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"rate\",\n          children: \"Rate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"rate\",\n          type: \"range\",\n          min: \"0.5\",\n          max: \"2\",\n          value: rate,\n          step: \"0.1\",\n          id: \"rate\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rate-value\",\n          children: rate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"clearfix\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"pitch\",\n          children: \"Pitch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"pitch\",\n          type: \"range\",\n          min: \"0\",\n          max: \"2\",\n          value: pitch,\n          step: \"0.1\",\n          id: \"pitch\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pitch-value\",\n          children: pitch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"clearfix\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"voice\",\n        onChange: handleChange,\n        children: voiceList.map(function (voice, index) {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: index,\n            children: voice.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"play\",\n          type: \"submit\",\n          children: btnText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(TextToSpeech, \"7RuV0tfbvMMHaUC8u+MvSrBze1Y=\");\n\n_c = TextToSpeech;\nexport default TextToSpeech;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextToSpeech\");","map":{"version":3,"sources":["/home/kryo/Desktop/ReduxToolkit_TodoApp/src/Components/TextToSpeech.jsx"],"names":["useState","useEffect","synth","window","speechSynthesis","TextToSpeech","text","setText","pitch","setPitch","rate","setRate","voiceSelect","setVoiceSelect","voiceList","setVoiceList","btnText","setBtnText","handleChange","e","type","target","name","value","console","log","handleSubmit","event","preventDefault","speak","getVoices","voices","sort","a","b","aname","toUpperCase","bname","speaking","paused","resume","pause","utterThis","SpeechSynthesisUtterance","onend","onstart","onerror","error","voice","onvoiceschanged","undefined","map","index"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nvar synth = window.speechSynthesis;\r\n\r\nconst TextToSpeech = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const [pitch, setPitch] = useState(1);\r\n  const [rate, setRate] = useState(1);\r\n  const [voiceSelect, setVoiceSelect] = useState(0);\r\n  const [voiceList, setVoiceList] = useState([]);\r\n  const [btnText, setBtnText] = useState(\"Play\");\r\n\r\n  const handleChange = (e) => {\r\n    const type = e.target.type;\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    if (type === \"textarea\") {\r\n      setText(value);\r\n    } else if (name === \"rate\") {\r\n      setRate(value);\r\n    } else if (name === \"pitch\") {\r\n      setPitch(value);\r\n    } else if (name === \"voice\") {\r\n      setVoiceSelect(value);\r\n    } else {\r\n      console.log(\"handleChange error type = \" + type);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = function (event) {\r\n    event.preventDefault();\r\n    speak();\r\n    // inputTxt.blur();\r\n  };\r\n\r\n  function getVoices() {\r\n    var voices = synth.getVoices().sort(function (a, b) {\r\n      const aname = a.name.toUpperCase(),\r\n        bname = b.name.toUpperCase();\r\n      if (aname < bname) return -1;\r\n      else if (aname === bname) return 0;\r\n      else return +1;\r\n    });\r\n    return voices;\r\n  }\r\n\r\n  function speak() {\r\n    if (synth.speaking) {\r\n      if (synth.paused) {\r\n        synth.resume();\r\n        setBtnText(\"Pause\");\r\n        console.log(\"resume\");\r\n      } else {\r\n        synth.pause();\r\n        setBtnText(\"Resume\");\r\n        console.log(\"pause\");\r\n      }\r\n    } else if (text !== \"\") {\r\n      var utterThis = new SpeechSynthesisUtterance(text);\r\n      console.log(utterThis);\r\n\r\n      //onboundary\r\n      //e.charIndex -> vi tri dau tien cua tu dang duoc doc\r\n\r\n      utterThis.onend = function (event) {\r\n        setBtnText(\"Play\");\r\n        console.log(\"SpeechSynthesisUtterance.onend\");\r\n      };\r\n      utterThis.onstart = function (event) {\r\n        setBtnText(\"Pause\");\r\n        console.log(\"SpeechSynthesisUtterance.onend\");\r\n      };\r\n      utterThis.onerror = function (event) {\r\n        console.error(\"SpeechSynthesisUtterance.onerror\");\r\n      };\r\n\r\n      if (voiceSelect >= 0) utterThis.voice = voiceList[voiceSelect];\r\n\r\n      utterThis.pitch = pitch;\r\n      utterThis.rate = rate;\r\n      synth.speak(utterThis);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    let voices = getVoices();\r\n    setVoiceList([...voices]);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (speechSynthesis.onvoiceschanged !== undefined) {\r\n      speechSynthesis.onvoiceschanged = voiceSelect;\r\n    }\r\n  }, [voiceSelect]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Speech synthesiser</h1>\r\n\r\n      <p>\r\n        Enter some text in the input below and press return or the \"play\" button\r\n        to hear it. change voices using the dropdown menu.\r\n      </p>\r\n\r\n      <form className=\"inputForm\" onSubmit={handleSubmit}>\r\n        <textarea\r\n          type=\"text\"\r\n          className=\"txt\"\r\n          value={text}\r\n          onChange={handleChange}\r\n        ></textarea>\r\n        <div>\r\n          <label htmlFor=\"rate\">Rate</label>\r\n          <input\r\n            name=\"rate\"\r\n            type=\"range\"\r\n            min=\"0.5\"\r\n            max=\"2\"\r\n            value={rate}\r\n            step=\"0.1\"\r\n            id=\"rate\"\r\n            onChange={handleChange}\r\n          />\r\n          <div className=\"rate-value\">{rate}</div>\r\n          <div className=\"clearfix\"></div>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"pitch\">Pitch</label>\r\n          <input\r\n            name=\"pitch\"\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"2\"\r\n            value={pitch}\r\n            step=\"0.1\"\r\n            id=\"pitch\"\r\n            onChange={handleChange}\r\n          />\r\n          <div className=\"pitch-value\">{pitch}</div>\r\n          <div className=\"clearfix\"></div>\r\n        </div>\r\n        <select name=\"voice\" onChange={handleChange}>\r\n          {voiceList.map((voice, index) => {\r\n            return (\r\n              <option key={index} value={index}>\r\n                {voice.name}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n        <div className=\"controls\">\r\n          <button id=\"play\" type=\"submit\">\r\n            {btnText}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextToSpeech;\r\n"]},"metadata":{},"sourceType":"module"}