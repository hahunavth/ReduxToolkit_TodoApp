{"ast":null,"code":"import _slicedToArray from \"/home/kryo/Desktop/ReduxToolkit_TodoApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/kryo/Desktop/ReduxToolkit_TodoApp/src/Components/TodoItem.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { ListGroup, Button, Container, Row, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar TodoItem = function TodoItem(props) {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isDisabled = _useState2[0],\n      setIsDisabled = _useState2[1];\n\n  var handleDeleteBtn = function handleDeleteBtn(id, e) {\n    setIsDisabled(true);\n    props.handleDelete(id, e).then(function () {}, function () {\n      setIsDisabled(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n    as: \"li\",\n    className: \"Todos-item\",\n    disabled: isDisabled,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: props.todo.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: true,\n          lg: \"1\",\n          md: \"auto\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: props.todo.isComplete,\n            onChange: props.toggleIsComplete.bind(_this, props.todo.id),\n            disabled: isDisabled\n          }, props.todo.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 17\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: true,\n          lg: \"1\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: handleDeleteBtn.bind(_this, props.todo.id),\n            disabled: isDisabled,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 11\n  }, _this);\n};\n\n_s(TodoItem, \"Sb9Ajwj8Ob/sw24rXx2/9Lml4vg=\");\n\n_c = TodoItem;\nexport default TodoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"sources":["/home/kryo/Desktop/ReduxToolkit_TodoApp/src/Components/TodoItem.jsx"],"names":["React","useState","ListGroup","Button","Container","Row","Col","TodoItem","props","isDisabled","setIsDisabled","handleDeleteBtn","id","e","handleDelete","then","todo","title","isComplete","toggleIsComplete","bind"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,SAAR,EAAmBC,MAAnB,EAA2BC,SAA3B,EAAsCC,GAAtC,EAA2CC,GAA3C,QAAqD,iBAArD;;;AAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAAA;;AAAA,kBAEYP,QAAQ,CAAC,KAAD,CAFpB;AAAA;AAAA,MAEjBQ,UAFiB;AAAA,MAELC,aAFK;;AAIxB,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,EAAD,EAAKC,CAAL,EAAW;AAC/BH,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAF,IAAAA,KAAK,CAACM,YAAN,CAAmBF,EAAnB,EAAuBC,CAAvB,EACCE,IADD,CACM,YAAM,CAAE,CADd,EACgB,YAAM;AAClBL,MAAAA,aAAa,CAAC,KAAD,CAAb;AACH,KAHD;AAIH,GAND;;AAQA,sBACM,QAAC,SAAD,CAAW,IAAX;AAAgB,IAAA,EAAE,EAAC,IAAnB;AAAwB,IAAA,SAAS,EAAC,YAAlC;AAA+C,IAAA,QAAQ,EAAED,UAAzD;AAAA,2BACE,QAAC,SAAD;AAAA,6BACA,QAAC,GAAD;AAAA,gCACE,QAAC,GAAD;AAAA,oBACGD,KAAK,CAACQ,IAAN,CAAWC;AADd;AAAA;AAAA;AAAA;AAAA,iBADF,eAIE,QAAC,GAAD;AAAK,UAAA,EAAE,MAAP;AAAQ,UAAA,EAAE,EAAC,GAAX;AAAgB,UAAA,EAAE,EAAC,MAAnB;AAAA,iCACE;AACA,YAAA,IAAI,EAAC,UADL;AAEA,YAAA,OAAO,EAAET,KAAK,CAACQ,IAAN,CAAWE,UAFpB;AAGA,YAAA,QAAQ,EAAEV,KAAK,CAACW,gBAAN,CAAuBC,IAAvB,CAA4B,KAA5B,EAAkCZ,KAAK,CAACQ,IAAN,CAAWJ,EAA7C,CAHV;AAIA,YAAA,QAAQ,EAAEH;AAJV,aAAYD,KAAK,CAACQ,IAAN,CAAWJ,EAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBAJF,eAYE,QAAC,GAAD;AAAK,UAAA,EAAE,MAAP;AAAQ,UAAA,EAAE,EAAC,GAAX;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,QAAhB;AAAyB,YAAA,OAAO,EAAED,eAAe,CAACS,IAAhB,CAAqB,KAArB,EAA2BZ,KAAK,CAACQ,IAAN,CAAWJ,EAAtC,CAAlC;AAA6E,YAAA,QAAQ,EAAEH,UAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADN;AAwBH,CApCD;;GAAMF,Q;;KAAAA,Q;AAsCN,eAAeA,QAAf","sourcesContent":["import React, {useState} from 'react';\nimport {ListGroup, Button, Container, Row, Col} from 'react-bootstrap'\n\n\nconst TodoItem = (props) => {\n\n    const [isDisabled, setIsDisabled] = useState(false);\n\n    const handleDeleteBtn = (id, e) => {\n        setIsDisabled(true);\n        props.handleDelete(id, e)\n        .then(() => {}, () => {\n            setIsDisabled(false);\n        })\n    }\n\n    return (\n          <ListGroup.Item as='li' className=\"Todos-item\" disabled={isDisabled}>\n            <Container>\n            <Row>\n              <Col>\n                {props.todo.title}\n              </Col>\n              <Col xs lg=\"1\"  md=\"auto\">\n                <input key={props.todo.id} \n                type=\"checkbox\" \n                checked={props.todo.isComplete} \n                onChange={props.toggleIsComplete.bind(this, props.todo.id)}\n                disabled={isDisabled}\n                />\n              </Col>\n              <Col xs lg=\"1\">\n                <Button variant='danger' onClick={handleDeleteBtn.bind(this, props.todo.id)} disabled={isDisabled}>\n                  Delete\n                </Button>\n              </Col>\n            </Row>\n            </Container>\n          </ListGroup.Item>\n    );\n};\n\nexport default TodoItem;"]},"metadata":{},"sourceType":"module"}